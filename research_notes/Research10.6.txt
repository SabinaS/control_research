Research- 10/6Summary of Previous WeekI spent the last week designing and simulating a more realistic Bang Bang Controller system. This system has two main classes: the Thermostat and the Environment. The Thermostat employs the basic bang bang operation: when the temperature falls below 68, it turns the furnace on and the fan off, when the temperature rises to above 72, it turns the fan on and the furnace of. The Thermostat sends these states to the Environment. The Environment is more complicated. It keeps continuously feeding the current temperature to the Thermostat. The current temperature increases is the furnace is on and decreases if the fan is on. However, I also wanted to add a component of the PID proportional method, where the temperature is changed in proportion to the error, ie the temperature is changed in proportion to the amount of time the furnace or fan have been continuously running. Goals for Next WeekThe next step in the process is to try and game the control algorithm with certain workloads to investigate what impact faults in the algorithm could have on the stability of the system. One method of going about this is to use binary rewriting tools to change one bit of the source code in our simulation and see how that affects the control decisions and the algorithm. I have looked at various tools to accomplish this and have decided to initially make an attempt with Dyninst. This choice was made because Dyninst is widely used, has a vast API, and also has a large amount of literature and documentation when compared with other tools. I am currently working on successfully changing bits in the source doe using Dyninst and should have results soon. 